using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Scripting.Hosting;
using IronPython.Runtime;

namespace PyDoodle
{
    //-///////////////////////////////////////////////////////////////////////
    //-///////////////////////////////////////////////////////////////////////

    public class Attr
    {
        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        private pydoodleModule _module;
        private object _pyobj;
        private string _name;
        private Handle _handle;
        private bool _autoCreateHandleField;

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public EventHandler ValueSet;

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public object Pyobj { get { return _pyobj; } }
        public string Name { get { return _name; } }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public pydoodleModule Module
        {
            set
            {
                if (_module != null)
                    throw new InvalidOperationException("Attr already has a Module set");

                _module = value;
            }

            get { return _module; }
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public Handle Handle
        {
            get { return _handle; }
            set { _handle = value; }
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public bool AutoCreateHandleField
        {
            get { return _autoCreateHandleField; }
            set { _autoCreateHandleField = value; }
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public Attr(object pyobj, string name)
        {
            _pyobj = pyobj;
            _name = name;
            _handle = null;
            _autoCreateHandleField = true;
            _module = null;
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public object GetValue()
        {
            return Module.ObjectOperations.GetMember(_pyobj, _name);
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public void SilentSetValue(object value)
        {
            Module.ObjectOperations.SetMember(_pyobj, _name, value);
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public void SetValue(object value)
        {
            SilentSetValue(value);

            OnValueSet();
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        protected void OnValueSet()
        {
            if (ValueSet != null)
                ValueSet(this, EventArgs.Empty);
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////

        public bool IsEquivalent(Attr rhs)
        {
            if (!object.ReferenceEquals(_pyobj, rhs._pyobj))
                return false;

            if (_name != rhs._name)
                return false;

            return true;
        }

        //-///////////////////////////////////////////////////////////////////////
        //-///////////////////////////////////////////////////////////////////////
    }
}
